import os
import asyncio
import discord
from discord.ext import commands
from dotenv import load_dotenv

from system import (
    random_greeting,
    connect_to_voice,
    get_audio_url,
    add_to_queue,
    get_queue,
    clear_queue,
    play_next,
    add_playlist_to_queue,
    history,
    queues,
    locked_tracks
)

# init
load_dotenv()
token = os.getenv("BOT_TOKEN")

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="-", intents=intents)


# events
@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")


# commands
@bot.command()
async def echo(ctx):
    """–ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –∂–∏–≤ –ª–∏ –±–æ—Ç"""
    await ctx.send("—è –∂–∏–≤–æ–π!!!")


@bot.command()
async def –ø—Ä–∏–≤–µ—Ç(ctx):
    """–†–∞–Ω–¥–æ–º–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    await ctx.send(random_greeting())


@bot.command()
async def join(ctx):
    """–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª"""
    await connect_to_voice(ctx)


@bot.command()
async def list(ctx, *, query):
    """–î–æ–±–∞–≤–∏—Ç—å —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å"""
    if ctx.author.voice is None:
        await ctx.send("–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    track = get_audio_url(query)
    channel_id = ctx.author.voice.channel.id
    add_to_queue(channel_id, track['title'], track['url'])
    await ctx.send(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å: {track['title']}")


@bot.command()
async def play(ctx):
    """–ù–∞—á–∞—Ç—å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—Ç—å –æ—á–µ—Ä–µ–¥—å"""
    voice = await connect_to_voice(ctx)
    if voice is None:
        return

    if voice.is_paused():
        voice.resume()
        await ctx.send("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ.")

    channel_id = voice.channel.id
    queue = get_queue(channel_id)

    if not queue:
        await ctx.send("–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞! –î–æ–±–∞–≤—å —Ç—Ä–µ–∫–∏ –∫–æ–º–∞–Ω–¥–æ–π `-list <–Ω–∞–∑–≤–∞–Ω–∏–µ>`,–∞ —è –ø–æ–ø—Ä–æ–±—É—é –Ω–∞–π—Ç–∏ —ç—Ç–æ –Ω–∞ —é—Ç—É–±–µ.")
        return

    if not voice.is_playing():
        song = queue.pop(0)
        voice.current = song
        #history.append(song)

        source = discord.FFmpegPCMAudio(song['url'])
        voice.play(
            source,
            after=lambda e: asyncio.run_coroutine_threadsafe(
                play_next(ctx, bot, channel_id),
                bot.loop
            )
        )
        await ctx.send(f"‚ñ∂Ô∏è –ò–≥—Ä–∞–µ—Ç: {song['title']}")
    else:
        await ctx.send("üéµ –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç!")


@bot.command()
async def skip(ctx):
    """–°–∫–∏–ø–Ω—É—Ç—å/–∞–Ω–ª–æ–∫–Ω—É—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ """
    voice = ctx.voice_client
    if voice and voice.is_playing():
        channel_id = voice.channel.id
        locked_tracks[channel_id] = False
        voice.stop()
        await ctx.send("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–µ—Å–Ω—é!")
    else:
        await ctx.send("–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.")


@bot.command()
async def stop(ctx):
    """–°—Ç–æ–ø —Ç—Ä–µ–∫–∞ (-play —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ) """
    voice = ctx.voice_client
    if not voice:
        await ctx.send("‚ö†Ô∏è –ë–æ—Ç –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")
        return

    if voice.is_playing():
        voice.pause()
        await ctx.send("‚è∏Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    else:
        await ctx.send("–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.")



@bot.command()
async def clear(ctx):
    """–û—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å(–ø–æ–ª–Ω–æ—Å—Ç—å—é) –∏ –≤—ã–∫–ª—é—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ """
    voice = ctx.voice_client
    if voice:
        voice.stop()
        clear_queue(voice.channel.id)
        await voice.disconnect()
        await ctx.send("‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏ –æ—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞.")
    else:
        await ctx.send("–ë–æ—Ç –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")


@bot.command()
async def remove(ctx, *, query):
    """–£–¥–∞–ª–∏—Ç—å —Ç—Ä–µ–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é"""
    if ctx.author.voice is None:
        await ctx.send("–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    channel_id = ctx.author.voice.channel.id
    queue = get_queue(channel_id)
    removed = [s for s in queue if query.lower() in s['title'].lower()]

    if not removed:
        await ctx.send(f"‚ùå –¢—Ä–µ–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{query}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    queues[channel_id] = [s for s in queue if query.lower() not in s['title'].lower()]
    await ctx.send(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {len(removed)} —Ç—Ä–µ–∫(–æ–≤) –∏–∑ –æ—á–µ—Ä–µ–¥–∏.")


@bot.command()
async def info(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –æ—á–µ—Ä–µ–¥—å/—Ç–µ–∫—É—â–∏–π –∏–≥—Ä–∞—é—â–∏–π —Ç—Ä–µ–∫"""
    if ctx.author.voice is None:
        await ctx.send("–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    channel_id = ctx.author.voice.channel.id
    voice = ctx.voice_client
    msg = ""

    if voice and voice.is_playing():
        now = getattr(voice, "current", None)
        title = now['title'] if now else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        msg += f"‚ñ∂Ô∏è –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: **{title}**\n"
    else:
        msg += "‚èπÔ∏è –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.\n"

    queue = get_queue(channel_id)
    if queue:
        msg += "\nüìÉ –û—á–µ—Ä–µ–¥—å:\n" + "\n".join(
            [f"{i+1}. {song['title']}" for i, song in enumerate(queue)]
        )
    else:
        msg += "\n–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞."

    await ctx.send(msg)

@bot.command()
async def playlist(ctx, number: int):
    """–î–æ–±–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–∏ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ (—Ö–∞—Ä–¥–∫–æ–¥ –≤ —Ç–µ–∫—Å—Ç–æ–≤–∏–∫–µ)"""
    if ctx.author.voice is None:
        await ctx.send("üéß –¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    channel_id = ctx.author.voice.channel.id
    await ctx.send(f"‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –ø–ª–µ–π–ª–∏—Å—Ç #{number}...")

    added_tracks = await add_playlist_to_queue(channel_id, number)

    if not added_tracks:
        await ctx.send(f"‚ùå –ü–ª–µ–π–ª–∏—Å—Ç #{number} –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç.")
        return

    await ctx.send(
        f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å {len(added_tracks)} —Ç—Ä–µ–∫(–æ–≤) –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞ #{number}:\n" +
        "\n".join(f"- {t}" for t in added_tracks)
    )


@bot.command()
async def story(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–µ–∫–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –∏–≥—Ä–∞–ª–∏"""
    if not history:
        await ctx.send("–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.")
        return

    last = history[-10:]
    text = "\n".join([f"{i+1}. {t['title']}" for i, t in enumerate(last)])
    await ctx.send("üïò –ò—Å—Ç–æ—Ä–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç—Ä–µ–∫–æ–≤:\n" + text)


@bot.command()
async def repeat(ctx):
    """–î–æ–±–∞–≤–∏—Ç—å –≤ –æ—á–µ—Ä–µ–¥—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Ç—Ä–µ–∫–æ–≤ –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏"""
    if ctx.author.voice is None:
        await ctx.send("–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")
        return

    channel_id = ctx.author.voice.channel.id

    if not history:
        await ctx.send("–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞.")
        return

    added = []
    for t in history[-10:]:
        add_to_queue(channel_id, t['title'], t['url'])
        added.append(t['title'])

    await ctx.send(
        f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(added)} —Ç—Ä–µ–∫(–æ–≤) –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏:\n" + "\n".join(added)
    )


@bot.command()
async def lock(ctx):
    """–ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ repeat —Ç–µ–∫—É—â–∏–π –∏–≥—Ä–∞—é—â–∏–π —Ç—Ä–µ–∫"""
    voice = ctx.voice_client
    if voice is None or not voice.is_playing():
        await ctx.send("‚ö†Ô∏è –°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç!")
        return

    channel_id = voice.channel.id
    current_track = getattr(voice, 'current', None)

    if not current_track:
        await ctx.send("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫!")
        return

    locked_tracks[channel_id] = True

    await ctx.send(f"üîí –¢—Ä–µ–∫ **{current_track['title']}** –∑–∞–∫—Ä–µ–ø–ª—ë–Ω –∏ –±—É–¥–µ—Ç –∏–≥—Ä–∞—Ç—å –≤ —Ü–∏–∫–ª–µ –¥–æ –∫–æ–º–∞–Ω–¥—ã `-skip`.")



bot.run(token)
